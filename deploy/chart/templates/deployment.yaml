apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "pg-aurora-client.fullname" . }}
  labels:
    tags.datadoghq.com/env: {{ .Values.env }}
    tags.datadoghq.com/service: pg-aurora-client
    tags.datadoghq.com/version: {{ .Values.image.tag }}
    {{- include "pg-aurora-client.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "pg-aurora-client.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        tags.datadoghq.com/env: {{ .Values.env }}
        tags.datadoghq.com/service: pg-aurora-client
        tags.datadoghq.com/version: {{ .Values.image.tag }}
        policy: restricted
        {{- include "pg-aurora-client.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command: [ "/app"]
          env:
            {{- include "pg-aurora-client.dbEnv" . | nindent 12 }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: admin
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.database.tls.enabled }}
          volumeMounts:
          - name:  aws-postgres-cabundle-secret
            mountPath: {{ .Values.external_secrets.database.caBundle.mountPath }}
            readOnly: true
          {{- end }}
      {{- if .Values.database.tls.enabled }}
      volumes:
      - name: aws-postgres-cabundle-secret
        secret:
          secretName: {{ .Values.external_secrets.database.caBundle.name }}
      {{- end }}